
-- Hide display
\set QUIET ON

\set VERBOSITY verbose
\set HISTFILE ~/.psql_history- :DBNAME
\set HISTCONTROL ignoredups

\set PAGER OFF
\timing
\pset null 'Â¤'
\encoding unicode
\x auto
\set COMP_KEYWORD_CASE upper

-- Ignore duplicate lines from history
\set HISTCONTROL ignoredups

-- Prompt
--\set PROMPT1 '%M:%[%033[1;31m%]%>%[%033[0m%] %n@%/%R%#%x '
--\set PROMPT1 '%[%033[1m%][%/] # '
\set PROMPT1 '%n@%M:%> [%/] %R%#%x '

-- SELECT * FROM<enter>. %R shows what type of input it expects.
\set PROMPT2 '... > '

-- Enable display
\unset QUIET

-- Menu

\echo Server date : `date '+%Y-%m-%d %H:%M:%S'`'\n'

\echo 'Administrative queries:\n'
\echo '  :settings\t| Server Settings'
\echo '  :conninfo\t| Server connections'
\echo '  :activity\t| Server activity'
\echo '  :locks\t| Lock info'
\echo '  :waits\t| Waiting queires'
\echo '  :dbsize\t| Database Size'
\echo '  :tablesize\t| Tables Size'
\echo '  :uselesscol\t| Useless columns'
\echo '  :uptime\t| Server uptime'
\echo '  :sp\t\t| Current Search Path'
\echo '  :menu\t\t| Help Menu'
\echo '  \\h\t\t| Help with SQL commands'
\echo '  \\?\t\t| Help with psql commands'
\echo '\n'

-- Administration queries

\set menu '\\i ~/.psqlrc'

\set settings 'select name, setting,unit,context from pg_settings;'

\set locks  'SELECT bl.pid AS blocked_pid, a.usename AS blocked_user, kl.pid AS blocking_pid, ka.usename AS blocking_user, a.query AS blocked_statement FROM pg_catalog.pg_locks bl JOIN pg_catalog.pg_stat_activity a ON bl.pid = a.pid JOIN pg_catalog.pg_locks kl JOIN pg_catalog.pg_stat_activity ka ON kl.pid = ka.pid ON bl.transactionid = kl.transactionid AND bl.pid != kl.pid WHERE NOT bl.granted;'

\set conninfo 'select usename, count(*) from pg_stat_activity group by usename;'

\set activity 'select datname, pid, usename, application_name,client_addr, client_hostname, client_port, query, state from pg_stat_activity;'

\set waits 'SELECT pg_stat_activity.pid, pg_stat_activity.query, pg_stat_activity.waiting, now() - pg_stat_activity.query_start AS \"totaltime\", pg_stat_activity.backend_start FROM pg_stat_activity WHERE pg_stat_activity.query !~ \'%IDLE%\'::text AND pg_stat_activity.waiting = true;'

\set dbsize 'SELECT datname, pg_size_pretty(pg_database_size(datname)) db_size FROM pg_database ORDER BY db_size;'

\set tablesize 'SELECT nspname || \'.\' || relname AS \"relation\", pg_size_pretty(pg_relation_size(C.oid)) AS "size" FROM pg_class C LEFT JOIN pg_namespace N ON (N.oid = C.relnamespace) WHERE nspname NOT IN (\'pg_catalog\', \'information_schema\') ORDER BY pg_relation_size(C.oid) DESC LIMIT 40;'

\set uselesscol 'SELECT nspname, relname, attname, typname, (stanullfrac*100)::int AS null_percent, case when stadistinct >= 0 then stadistinct else abs(stadistinct)*reltuples end AS \"distinct\", case 1 when stakind1 then stavalues1 when stakind2 then stavalues2 end AS \"values\" FROM pg_class c JOIN pg_namespace ns ON (ns.oid=relnamespace) JOIN pg_attribute ON (c.oid=attrelid) JOIN pg_type t ON (t.oid=atttypid) JOIN pg_statistic ON (c.oid=starelid AND staattnum=attnum) WHERE nspname NOT LIKE E\'pg\\\\_%\' AND nspname != \'information_schema\' AND relkind=\'r\' AND NOT attisdropped AND attstattarget != 0 AND reltuples >= 100 AND stadistinct BETWEEN 0 AND 1 ORDER BY nspname, relname, attname;'

\set uptime 'select now() - pg_postmaster_start_time() AS uptime;'

\set sp 'SHOW search_path;'
